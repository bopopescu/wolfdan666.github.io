<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>单林敏的博客</title>
  
  <subtitle>wolfdan&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wolfdan.cn/"/>
  <updated>2020-03-12T06:55:26.594Z</updated>
  <id>https://www.wolfdan.cn/</id>
  
  <author>
    <name>单林敏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jsdelivr加速资源加载_raw.github被ban之后如何访问github资源</title>
    <link href="https://www.wolfdan.cn/jsdelivr%E5%8A%A0%E9%80%9F%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD-raw-github%E8%A2%ABban%E4%B9%8B%E5%90%8E%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AEgithub%E8%B5%84%E6%BA%90/"/>
    <id>https://www.wolfdan.cn/jsdelivr加速资源加载-raw-github被ban之后如何访问github资源/</id>
    <published>2020-03-12T06:54:12.000Z</published>
    <updated>2020-03-12T06:55:26.594Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ol><li>raw.github被ban之后如何访问github资源</li><li>jsdelivr做图床</li></ol><h1 id="raw-github被ban之后如何访问github资源"><a href="#raw-github被ban之后如何访问github资源" class="headerlink" title="raw.github被ban之后如何访问github资源"></a>raw.github被ban之后如何访问github资源</h1><p>由于<strong>众所周知</strong>的原因，raw.github无法访问了，那么我们如何下载githua上的资源呢？</p><h2 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h2><p>原来的资源链接是这样的<code>https://raw.githubusercontent.com/wolfdan666/BlogPic/master/test.jpg</code><br>后来的资源链接就可以这样访问<code>https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/test.jpg</code><br>或者<br><code>https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic@master/test.jpg</code></p><h2 id="原理剖析"><a href="#原理剖析" class="headerlink" title="原理剖析"></a>原理剖析</h2><h3 id="CDN简介"><a href="#CDN简介" class="headerlink" title="CDN简介"></a>CDN简介</h3><p>内容分发网络（英语：Content Delivery Network或Content Distribution Network，缩写：CDN）是指一种透过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、影片、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p><h3 id="jsdelivr简介"><a href="#jsdelivr简介" class="headerlink" title="jsdelivr简介"></a>jsdelivr简介</h3><p>jsDelivr是一款公共免费 CDN ，调用多家 CDN 保证全球服务质量、拥有多层缓存和灾后保障 SLA 100 。也是为数不多的有 ICP 备案，提供许多中国节点的海外 CDN 服务商。</p><p>有搜索引擎，支持一键复制文件 URL 和标签，支持分发 NPM、GitHub、WordPress SVN 的文件</p><h3 id="食用姿势"><a href="#食用姿势" class="headerlink" title="食用姿势"></a>食用姿势</h3><p>把<code>https://raw.githubusercontent.com/username/repoName/branch/file</code><br>改成<br><code>https://cdn.jsdelivr.net/gh/username/repo@branch/file</code> 的形式</p><p>当然，如果你放在仓库的默认分支，还可以直接将 branch 这个关键字直接删了，变成 <code>https://cdn.jsdelivr.net/gh/username/repo/file</code> 获取</p><p>另外，如果是一些比较稳定的文件，后面不会频繁地改动，还可以发布release成一个版本，然后在 repo 后 @version 就可以引用对应的版本。</p><h2 id="优劣"><a href="#优劣" class="headerlink" title="优劣"></a>优劣</h2><ul><li>可以加速访问，当然现在是从无法访问变成加速访问，233</li><li>不限带宽：曾经被自己的小机的1M带宽气哭</li><li>缺点是内容大小不能超过50M，这个一般影响不是很大</li></ul><h1 id="jsdelivr做图床"><a href="#jsdelivr做图床" class="headerlink" title="jsdelivr做图床"></a>jsdelivr做图床</h1><p>看了上面的操作之后，小伙伴们有没有萌生出一种jsdelivr容许的薅羊毛姿势呢？</p><p>对了，就是当图床，<strong>当然，我们要爱护github网站，尽量少做图床使用，毕竟github好像明文推荐不这样做</strong>，朋友们适当抉择，我这里只是提供一种方式，可以自己去购买好用的CDN</p><h2 id="使用姿势"><a href="#使用姿势" class="headerlink" title="使用姿势"></a>使用姿势</h2><p>就是建立github仓库然后上传图片，这个建立仓库的这些操作相信大家能找到教程</p><p>然后就是批量修改链接，请朋友们看我的一个朋友的一片文章<br><a href="https://www.wolfdan.cn/%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E4%B8%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%A0%BC%E5%BC%8F/">脚本批量修改文件中链接的格式</a></p><p>当然大家也可以配合PicGO加强使用，虽然我很少这样食用，但是还是挺方便的<br>这里再推荐我朋友的文章<a href="https://www.wolfdan.cn/markdown%E5%86%99%E4%BD%9C%E8%B6%85%E6%96%B9%E4%BE%BF%E7%9A%84%E5%9B%BE%E7%89%87%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/">markdown写作超方便的图片使用方式</a><br><img data-src="https://img-blog.csdnimg.cn/20200312141832273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt="PicGo"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://zhuanlan.zhihu.com/p/95772354" target="_blank" rel="noopener">jsDelivr | 免费加速图片等静态资源</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      jsdelivr加速资源加载_raw.github被ban之后如何访问github资源 jsdelivr做图床
    
    </summary>
    
      <category term="瞎折腾" scheme="https://www.wolfdan.cn/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="hexo" scheme="https://www.wolfdan.cn/tags/hexo/"/>
    
      <category term="blog" scheme="https://www.wolfdan.cn/tags/blog/"/>
    
      <category term="图床" scheme="https://www.wolfdan.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>ARSTB打卡第46周[46/521]</title>
    <link href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC46%E5%91%A8-46-521/"/>
    <id>https://www.wolfdan.cn/ARSTB打卡第46周-46-521/</id>
    <published>2020-03-08T03:25:38.000Z</published>
    <updated>2020-03-12T06:31:43.646Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/322_%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2.cpp" target="_blank" rel="noopener">LeetCode/322_零钱兑换</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/on-the-couch/20-things-i-wish-id-known-in-my-20s-but-i-had-to-learn-by-myself-3ffa5525d584" target="_blank" rel="noopener">20 Things I Wish I’d Known In My 20s (But I Had To Learn By Myself)</a></p><ul><li>Holding onto things you can’t change will destroy you though, so train your eyes on the road in front.</li><li>Hurt, rejection and pain are part of the human deal. But keep learning to let go, or at least loosen your grip on it.</li><li>People you love and care about will be lost to you, and you have to find ways to deal with it. It takes way longer than you think, sometimes forever. But you need to know that you can live a good, even great, life alongside it.</li><li>其实最近有点失意，因为一些自己在意的东西(自己的技术能力被aly面试官diss..自己每天夜聊的朋友说我们想法不同而离去)都面目全非，所以看了一些其他文章都觉得没什么意思，最终看到这个，觉得很有道理</li></ul><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/qq_23974323/article/details/80067250" target="_blank" rel="noopener">nginx实现简单的图片服务器（windows）+静态文件服务器</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://www.wolfdan.cn/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%EF%BC%8C%E5%B1%95%E7%A4%BAgit%E4%BB%93%E5%BA%93%E7%9A%84%E5%9B%BE%E7%89%87/">服务器搭建个人图床，展示git仓库的图片</a></p><h1 id="Book《谷歌时间管理课》"><a href="#Book《谷歌时间管理课》" class="headerlink" title="Book《谷歌时间管理课》"></a>Book《谷歌时间管理课》</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/Google_time_manage.jpg" width="20%" height="20%"></p><ul><li>“时间策略”与“时间规划”的最终结果是将通过效率化所创造的时间与精力运用到无法效率化的工作上. “人与人之间的信赖关系”,还有阅读书籍、与家人共同生活、为一些事物感动落泪、放松心情的时间等，它们都属于无法进行效率化的范畴。</li><li>瞄准自己无法掌控的终点（目标）没有任何意义</li><li>谷歌旗下还聚集了有着以下文化特征的优秀人才。例如，“Thank God，It’s Friday.（感谢上帝，星期五来啦！）”这样的句子，取开头的字母组成TGIF作为一种独有的公司文化用语。意思是出于对平安度过这一周抱着感激之心和相互慰问之意，周五晚上在办公室举行聚会。在聚会上大家就如何为社会做贡献、解决社会问题畅所欲言，这些都是发自内心的言论。例如，参观福利院之后大家发表意见，提出谷歌公司可以从哪方面提供改善手段，以此造福更多的人。虽然TGIF属于休闲的时间，但是这样的讨论却极其认真而热烈，每个人都会发自内心地考虑如何为社会做贡献，这就是谷歌公司特殊的企业文化。</li><li>吃饭睡觉打高尔夫这样的生活对社会没有任何贡献。那些漂亮话就不提了，这样的生活只能算是我一味地享受时光。更恰当地说，一想到自己成了一个只消费不生产的人，不由得感到眼前一片黑暗。与刹那间的欢乐相比，全心全意为社会做贡献，这样的生活才能长期维系下去，并能体会到真正的美。这就是我当时所确立的信念。</li><li>站在另外一个角度来看，如果基于为社会做贡献这一理念为目标全身心投入工作，就算最终失败，也能告诉世人“我这种方式会失败”的教训。这样也是为社会做贡献，我的失败也有了价值。明白这一点就会更自然而然地身负使命感，更易于下定决心采取果断行动。在我看来，将工作与为社会解决课题、为社会做贡献结合起来这样的思路，其实对自己也有益处。</li><li>上面这段话不就是马云曾经回忆创业初心时说的，我觉得这种方式能够改善我们的生活，我想把这种东西推广到中国，我不成功，有人会成功，我希望中国人早点成功</li><li><strong>有必要明确认识的是，“过于在意他人的看法会剥夺自己的时间”。—- 不要去做他人的课题(来自《被讨厌的勇气》的观点)</strong></li><li>“不客套”是一个加分项。改变在意他人看法的自己，就会减少为揣摩他人所消耗的时间，也意味着能挤出新的时间</li><li>在谷歌公司，如果认为出席某个会议没有实际意义，随时可以取消会议；或者在会议中途觉得自己没有必要参与，可以随时退出会场。这种做法已经在公司制度上做出了明文规定</li><li><strong>学习时即使还有懵懂的地方也不必在意，首先完成一个周期的工作。“虽然还有部分没弄清楚，但是拿出了成果！”“差不多弄明白了！”——必须要在最短的期间体会到类似这样的成就感与充实感，这也是我能够维持高度的工作热情，坚持走完3个月周期的秘诀。尽早享受成就感，不要纠结细节。</strong></li><li>时至今日，AI开始在各个领域崭露头角，但是这种批判新潮流的意见，无论在哪个时代都不曾缺席过。<strong>负面思想会限制自己的眼界，而且这种思想会破坏新生事物的萌芽，从这个角度来看，这样的思想得不偿失。</strong></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode/322_零钱兑换 20 Things I Wish I’d Known In My 20s (But I Had To Learn By Myself) nginx实现简单的图片服务器（windows）+静态文件服务器 服务器搭建个人图床，展示git仓库的图片 《谷歌时间管理课》 有必要明确认识的是，“过于在意他人的看法会剥夺自己的时间”。--- 不要去做他人的课题(来自《被讨厌的勇气》的观点)
    
    </summary>
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/categories/ARSTB/"/>
    
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/tags/ARSTB/"/>
    
  </entry>
  
  <entry>
    <title>服务器搭建个人图床，展示git仓库的图片</title>
    <link href="https://www.wolfdan.cn/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%EF%BC%8C%E5%B1%95%E7%A4%BAgit%E4%BB%93%E5%BA%93%E7%9A%84%E5%9B%BE%E7%89%87/"/>
    <id>https://www.wolfdan.cn/服务器搭建个人图床，展示git仓库的图片/</id>
    <published>2020-03-04T09:43:37.000Z</published>
    <updated>2020-03-12T06:32:10.098Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="设立多location的nginx映射"><a href="#设立多location的nginx映射" class="headerlink" title="设立多location的nginx映射"></a>设立多location的nginx映射</h1><p>原来自己的Nginx已经搭建了自己的网站，所以需要配置多个location，用第二个location来展示自己的图片，因此<strong>location如果要一个特定的url(不是<code>/</code>的时候)要使用别名，不能用root，alias指定的目录是准确的，直接指向目标文件的物理地址</strong></p><p>主要是要注意自己的第二个location下面一定要有对应的目录,<strong>然后要启动图片浏览，文件下载，就必须使用<code>autoindex on;</code></strong></p><p>需要添加的location格式如下<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来的网站的节点</span></span><br><span class="line">location / &#123;</span><br><span class="line">    root /var/www/blog;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 为了搞自己的图床，2020年3月4日13:56:42 再来折腾</span></span><br><span class="line"><span class="comment"># 一定要在www建立img目录--这是你去访问才能看到绿锁，然后加入index.html才能看到内容</span></span><br><span class="line">location /img &#123;</span><br><span class="line">    <span class="comment">#img /var/www/img;</span></span><br><span class="line">    <span class="comment"># 好像只能使用alias，不然连nginx -t都过不了</span></span><br><span class="line">    <span class="built_in">alias</span> /var/www/img;</span><br><span class="line">    <span class="comment"># index index.html index.htm;</span></span><br><span class="line">    autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h1 id="搭建git服务器并添加git-hooks"><a href="#搭建git服务器并添加git-hooks" class="headerlink" title="搭建git服务器并添加git-hooks"></a>搭建git服务器并添加git-hooks</h1><p>看完注意点再操作<br><a href="https://segmentfault.com/a/1190000016106584#articleHeader16" target="_blank" rel="noopener">添加githooks可以看这个</a><strong> <font color="red">这里要仿造这个链接的教程再在别的目录里面进行git图片仓库的操作，然后自己之后就可以每次像给github提交一样给自己的服务器提交了(看下面我的代码)</font></strong></p><p>linux版本<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个只要做一次</span></span><br><span class="line">git remote add pic@huaweiyun git@xxxx.32.xxx.17:/home/git/img.git</span><br><span class="line">git push pic@huaweiyun master</span><br><span class="line"><span class="comment"># 之后每次的提交</span></span><br><span class="line">git pull pic@huaweiyun master</span><br><span class="line">git add --all</span><br><span class="line">git commit -m <span class="string">"`date '+%Y-%m-%d %H:%M:%S'`"</span></span><br><span class="line">git push pic@huaweiyun master</span><br></pre></td></tr></table></figure><p></p><p>windows版本<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个只要做一次</span></span><br><span class="line">git remote add pic@huaweiyun git@xxxx.32.xxx.17:/home/git/img.git</span><br><span class="line">git push pic@huaweiyun master</span><br><span class="line"><span class="comment"># 之后每次的提交</span></span><br><span class="line">git pull pic@huaweiyun master</span><br><span class="line">git add --all</span><br><span class="line">git commit -m <span class="string">"%date%"</span></span><br><span class="line">git push pic@huaweiyun master</span><br></pre></td></tr></table></figure><p></p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ul><li>一定要让git/.ssh的所有文件的拥有者是git，否则可能导致无法免密登录<br>就是要操作<code>sudo chown -R git:git /home/git/.ssh</code></li><li>还有我们后面要启用githooks，所以不要把git的运行目录降权，否则无法使用</li><li>也可以给git添加root权限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure></li></ul><p>找到以下内容：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><p></p><p>在下面添加一行：git ALL=(ALL) ALL</p><p>保存退出后改回权限：chmod 400 /etc/sudoers</p><h2 id="思考代码"><a href="#思考代码" class="headerlink" title="思考代码"></a>思考代码</h2><p>了解到了裸库上的文件是看不到的，必须通过web转化成可以看见的链接，所以现在就很好理解下面的代码了<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">GIT_REPO=/home/git/img.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/img</span><br><span class="line">PUBLIC_WWW=/var/www/img</span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br></pre></td></tr></table></figure><p></p><h1 id="成功图展示"><a href="#成功图展示" class="headerlink" title="成功图展示"></a>成功图展示</h1><p><img data-src="https://img-blog.csdnimg.cn/20200304170709667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt="爽"></p><h1 id="nginx配置易错点回顾"><a href="#nginx配置易错点回顾" class="headerlink" title="nginx配置易错点回顾"></a>nginx配置易错点回顾</h1><ul><li><strong>location如果要一个特定的url要使用别名，不能用root，alias指定的目录是准确的</strong></li><li><strong>然后要启动图片浏览，文件下载，就必须使用<code>autoindex on;</code></strong></li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/lizhiyuan_eagle/article/details/90639448" target="_blank" rel="noopener">Nginx一个server配置多个location</a><br><a href="https://www.liaoxuefeng.com/wiki/896043488029600/899998870925664" target="_blank" rel="noopener">搭建Git服务器</a><br><a href="https://segmentfault.com/a/1190000016106584#articleHeader16" target="_blank" rel="noopener">添加githooks可以看这个</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      服务器搭建个人图床，展示git仓库的图片 location如果要一个特定的url(不是`/`的时候)要使用别名，不能用root，alias指定的目录是准确的，直接指向目标文件的物理地址 然后要启动图片浏览，文件下载，就必须使用`autoindex on;`
    
    </summary>
    
      <category term="瞎折腾" scheme="https://www.wolfdan.cn/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="git" scheme="https://www.wolfdan.cn/tags/git/"/>
    
      <category term="shell" scheme="https://www.wolfdan.cn/tags/shell/"/>
    
      <category term="nginx" scheme="https://www.wolfdan.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ARSTB打卡第45周[45/521]</title>
    <link href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC45%E5%91%A8-45-521/"/>
    <id>https://www.wolfdan.cn/ARSTB打卡第45周-45-521/</id>
    <published>2020-03-01T09:57:36.000Z</published>
    <updated>2020-03-12T06:31:43.345Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://leetcode-cn.com/problems/implement-stack-using-queues/solution/225_cyong-dui-lie-shi-xian-zhan-by-linmin/" target="_blank" rel="noopener">LeetCode225_C++用队列实现栈</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/better-programming/10-things-every-developer-should-learn-72697ed5d94a" target="_blank" rel="noopener">10 Things Every Developer Should Learn</a><br>我的感受是”在什么山上唱什么歌”,对于特定需求,写特定代码</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/xiaohan2909/article/details/50152997" target="_blank" rel="noopener">JNI调用C++类的方式</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104531272" target="_blank" rel="noopener">脚本批量修改文件中链接的格式</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104541134" target="_blank" rel="noopener">apue中memstr.c的究极困惑解决</a></p><h1 id="Book-《人人都在说慌》"><a href="#Book-《人人都在说慌》" class="headerlink" title="Book_《人人都在说慌》"></a>Book_《人人都在说慌》</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/everybody_lies.jpg" width="20%" height="20%"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这本书主要是对于人们在google上搜索的数据信息以及平时的采访信息做对比,然后发现google上的查找数据更加精确的反应了人们内心真实的想法,特别是在私密浏览模式时候的访问数据更加如此</p><p>截取书中的一段话 :</p><p>公司可以学习如何获得更多的客户，政府可以学习如何使用报销来最大限度地提升医生的工作积极性，学生可以了解哪些学校是最有价值的。这些试验证明了大数据 能够替代 猜测、传统智慧和与实际效果相关的伪劣关系——因果关系。</p><h2 id="观点内核探讨"><a href="#观点内核探讨" class="headerlink" title="观点内核探讨"></a>观点内核探讨</h2><p>我觉得这本书和我<a href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC43%E5%91%A8-43-521/">之前介绍的一本哲学类的书《被讨厌的勇气》</a>从不同的角度论证了相同的观点就是说人们面对公众时总是在说谎</p><p>其实《被讨厌的勇气》更加观点深刻,因为它的观点是人们甚至对自己说话,只是自己没有发现自己对自己说谎</p><p>举一个小例子: 就是一个人说自己有童年阴影,然后就一直不和外人来往</p><p>上面的谎言是典型的原因论,认为事情都是由过去造成的</p><p>然而《人人都在说慌》这本书讲究相关性,会告诉你: 数据表明这些人和经常搜索”如何和别人来往”这些记录的人相关性极高</p><p>而《被讨厌的勇气》这本书讲究”目的论”而抛弃”原因论”,会告诉你: 这个人不敢和别人来往,怕别人不喜欢自己,所以一个人不和别人来往对于自己是”善”(有好处的),所以不和别人来往</p><p>其实这里抛弃原因论,还是会用到一些因果关系,所以这里否定原因论不是去否定因果关系,而是探求更真实的世界和更真实的自己</p><h2 id="书本评价"><a href="#书本评价" class="headerlink" title="书本评价"></a>书本评价</h2><p>此书用了大量的例子说明同一个道理,但是很多例子我并不是很感兴趣,所以我会跳读这本书,然后了解这本书的内核,自己反而更喜欢《被讨厌的勇气》这本书,当然,《被讨厌的勇气》这本书更加值得多读几次</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode225_C++用队列实现栈 &quot;在什么山上唱什么歌&quot;,对于特定需求,写特定代码 JNI调用C++类的方式 脚本批量修改文件中链接的格式 apue中memstr.c的究极困惑解决 建议可以阅读《人人都在说慌》自己感兴趣部分,这本书让我对《被讨厌的勇气》有了更加多的好感
    
    </summary>
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/categories/ARSTB/"/>
    
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/tags/ARSTB/"/>
    
  </entry>
  
  <entry>
    <title>关于求职面试的思考</title>
    <link href="https://www.wolfdan.cn/%E5%85%B3%E4%BA%8E%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://www.wolfdan.cn/关于求职面试的思考/</id>
    <published>2020-02-28T13:25:58.000Z</published>
    <updated>2020-03-12T06:32:06.481Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><p>自己从19年11月底听说专业里有个学后端和一个学前端的同学去了附近的某康威视实习了，然后自己也开始了关注工作招聘，一开始写简历写得很挫，加上自己长沙那边头部的一个公司正好实习生招聘，然后我就准备了一个月的算法和简历上项目的再熟悉，在截止日期前10天左右投了简历，C++开发实习，5天后进度显示<code>简历不匹配</code>，一开始心灰意冷，悲痛欲绝</p><hr><p>好了，我是菜鸡</p><hr><p>然后后面心灰意冷，准备先在学校附近找个公司历练一下，然后就在某算公司拿到了实习offer，结果本来2月10号去上班，现在因为疫情的原因，hhh，那边hr总是忽略我能不能远程办公的提问…就说过一次说开学后再去实习</p><p>然后春招来了，自己投了某里的提前内推，投了2个部门，一个收了我的简历，一个没收，一开始是没收的消息先到，然后我就以为先投那个肯定早就凉了，结果过了几天打电话来了，然后说让我准备准备，大概2月底面试</p><p>还投了之前长沙那个拒我简历的公司的测试岗，想看看里面到底有多牛逼，结果前几天一面，感觉一般，然后到现在7天了还没有消息(今天2020.2.28)</p><p>某里的面试让我很慌，因为我在网上找到仅有的两篇面经，感觉真的是难得不行，多次有放弃的念头，然后自己整个人的心态都很不好，有几天看书的状态都很差劲，直接8个小时的学习时间被我搞得每天只学习了1个小时一样…</p><p>然后这几天终于想开了</p><p>其实找工作就像谈恋爱(虽然我好像也没恋爱)，应该是一个相互挑选的过程，不应该当舔狗，因为舔狗不得好死，而且自己会很虚，而且自己并没有得到实质的实力提升，而且很容易面挂(虽然当前的实力面挂也很正常)，所以就会陷入一个怀疑人生的恶性循环之中</p><p>而且就算你面试过了，你还是为了提升自己的水平，而不是混经历，所以得出了总的核心思想是:<br><strong>快，滚去学习，静下心的专注学习，把书啃下去，就算错过了所有的面试，只要在秋招前把自己的水平提升到真正让自己有信心的水平就算自己是成功的</strong></p><p>当然如果某里最近找我面试，我也会去好好准备，不会浪费一次锻炼自己的机会，然后继续<strong>疯狂学习，疯狂啃书</strong>，如果失败了就总结经验，如果偶尔进去了，就要更加努力地啃书了，不然到时候没有把事情做好就太对不起别人了</p><p>现在还是没有面试，也还没有通知(虽然那个前辈让我准备好了和他说，但我感觉我可能要准备一万年…),所以暂时不发这篇文章，等某里的面试完了再发</p><p>总结 :</p><ul><li>找工作是双方选择的过程，一定要Peer，对等<ul><li>不对等的话，成交机会很低，会浪费双方很多时间和精力</li><li>不对等的成交也很可能会出现不愉快，就会产生不好的影响</li></ul></li><li>不管什么时候都要努力提升自己，只有自己真正有水平，有底气了，才能和更好的平台对等谈条件，而不是整天焦虑</li><li>如果水平不够，那就不要焦虑，先选择和自己Peer的平台，然后提升自己，将来有实力了才去做更有挑战的事情</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      找工作是双方选择的过程，一定要Peer，对等,所以要想有好的offer,就必须快速迭代自己的技能
    
    </summary>
    
      <category term="思考" scheme="https://www.wolfdan.cn/categories/%E6%80%9D%E8%80%83/"/>
    
    
      <category term="思考" scheme="https://www.wolfdan.cn/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="总有一些事值得" scheme="https://www.wolfdan.cn/tags/%E6%80%BB%E6%9C%89%E4%B8%80%E4%BA%9B%E4%BA%8B%E5%80%BC%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>脚本批量修改文件中链接的格式</title>
    <link href="https://www.wolfdan.cn/%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E4%B8%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%A0%BC%E5%BC%8F/"/>
    <id>https://www.wolfdan.cn/脚本批量修改文件中链接的格式/</id>
    <published>2020-02-27T03:40:55.000Z</published>
    <updated>2020-03-12T06:50:15.923Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p><strong><font color="red">着急的朋友可以直接看下面的编写脚本目录项</font></strong></p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近<code>https://raw.githubusercontent.com/</code>被墙了,然后<strong>众所周知</strong>我们就无法访问上面的内容了,所以我自己用github当图床,然后我的博客现在的图片全都无法正常加载了<br><img data-src="https://img-blog.csdnimg.cn/20200227104322672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><p>所以我需要更改到国内的链接仓库或者自己自己服务器搭建的仓库,那么我就要修改我现在整整131篇博文的图片链接,我想我会烦死的,<strong>所以我就想到了自己之前学的shell脚本,自动化批量修改文件链接的格式</strong><br><img data-src="https://img-blog.csdnimg.cn/20200227104418753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h1 id="背景二"><a href="#背景二" class="headerlink" title="背景二"></a>背景二</h1><p><strong><font color="red">我今天浏览我的blog的时候突然发现一些照片无法正常访问，然后突然想到自己之前从gitee搬迁到github的原因，就是因为gitee有1M大小的显示，一旦图片大于1M就无法正常展示</font></strong></p><p>所以2020年3月4日17:20 又一次批处理我的文件链接，并且在此之前花了整整一个下午去<a href="https://blog.csdn.net/neve_give_up_dan/article/details/104652870" target="_blank" rel="noopener">搭建我的私有服务器图床</a></p><h1 id="背景三"><a href="#背景三" class="headerlink" title="背景三"></a>背景三</h1><p>发现了cdn.jsdelivr无缝衔接github仓库，而且带宽无限，然后就用上了，毕竟自己的服务器带宽只有1M</p><h1 id="单文件测试"><a href="#单文件测试" class="headerlink" title="单文件测试"></a>单文件测试</h1><h2 id="非插入测试"><a href="#非插入测试" class="headerlink" title="非插入测试"></a>非插入测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e <span class="string">"s/https:\/\/raw.githubusercontent.com\/wolfdan666\/BlogPic\/master\//https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master\//g"</span> ARSTB打卡第44周-44-521.md</span><br></pre></td></tr></table></figure><h3 id="解读"><a href="#解读" class="headerlink" title="解读"></a>解读</h3><ul><li><code>-e</code>是表示用后面的脚本执行</li><li><code>s/./../</code>表示用<code>.</code>替换<code>..</code>,然后最后加一个<code>g</code>表示全局替换</li><li>其中对于链接中用到的每一个<code>/</code>都要在前面添加<code>\</code>来转义</li><li>最后的是要执行脚本的文件名</li><li><strong>当然这个脚本是sed执行流处理,所以不会修改文件内容,只是把修改结果打印到stdout,这里的stdout就是我们的命令行终端</strong></li><li>我们要修改文件的话,就要把<code>-e</code>改成<code>-i</code></li></ul><h3 id="结果截取片段"><a href="#结果截取片段" class="headerlink" title="结果截取片段"></a>结果截取片段</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改前</span></span><br><span class="line">(https://raw.githubusercontent.com/wolfdan666/BlogPic/master/books/%E4%B8%80%E7%A6%85_%E4%BD%A0%E6%80%BB%E8%AF%B4%E6%B2%A1%E4%BA%8B.jpg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行上面的脚本之后</span></span><br><span class="line">(https://gitee.com/wolfdan/BlogPic/raw/master/books/%E4%B8%80%E7%A6%85_%E4%BD%A0%E6%80%BB%E8%AF%B4%E6%B2%A1%E4%BA%8B.jpg)</span><br></pre></td></tr></table></figure><h2 id="插入测试-总感觉哪里怪怪的"><a href="#插入测试-总感觉哪里怪怪的" class="headerlink" title="插入测试(总感觉哪里怪怪的)"></a>插入测试(总感觉哪里怪怪的)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"s/https:\/\/raw.githubusercontent.com\/wolfdan666\/BlogPic\/master\//https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master\//g"</span> ARSTB打卡 第44周-44-521.md</span><br></pre></td></tr></table></figure><h3 id="解读-1"><a href="#解读-1" class="headerlink" title="解读"></a>解读</h3><p>这里就是上面的脚本把<code>-e</code>改成<code>-i</code></p><h3 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h3><p>sed修改文件,git查看差异<br><img data-src="https://img-blog.csdnimg.cn/20200227105615280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h1 id="文件批处理"><a href="#文件批处理" class="headerlink" title="文件批处理"></a>文件批处理</h1><p>操作前请备份,或者有git仓库,可以回滚</p><h2 id="测试find"><a href="#测试find" class="headerlink" title="测试find"></a>测试find</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> `find . -name <span class="string">"*.md"</span>`;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$n</span>;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200227111151689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h2 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">wolfdan@wolfdan-PC $ vim chlink.sh</span><br><span class="line">wolfdan@wolfdan-PC $ cat chlink.sh</span><br><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏"</span></span><br><span class="line">sum=0</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> `find . -name <span class="string">"*.md"</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        ((sum++))</span><br><span class="line">        sed -i <span class="string">"s/https:\/\/raw.githubusercontent.com\/wolfdan666\/BlogPic\/master\//https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master\//g"</span> <span class="variable">$n</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"操作了&#123;<span class="variable">$sum</span>&#125;个文件"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请仔细核查,建议使用VScode的git工具查看更改差异更香"</span></span><br><span class="line"> wolfdan@wolfdan-PC $ bash chlink.sh</span><br><span class="line">请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏</span><br><span class="line">操作了&#123;143&#125;个文件</span><br><span class="line">请仔细核查,建议使用VScode的git工具查看更改差异更香</span><br></pre></td></tr></table></figure><h2 id="背景二的代码编写"><a href="#背景二的代码编写" class="headerlink" title="背景二的代码编写"></a>背景二的代码编写</h2><p>发现windows使用git的bash处理速度比linux下面的原生bash处理速度相差甚远！<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ ls</span><br><span class="line">_drafts  _posts  about  ads.txt  alipay.jpg  categories  chlink.sh  CNAME  links  tags  捐赠  下雪了</span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ vim chlink.sh</span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ cat chlink.sh</span><br><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏"</span></span><br><span class="line">sum=0</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> `find . -name <span class="string">"*.md"</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        ((sum++))</span><br><span class="line">        <span class="comment">#sed -i "s/https:\/\/raw.githubusercontent.com\/wolfdan666\/BlogPic\/master\//https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master\//g" $n</span></span><br><span class="line">        sed -i <span class="string">"s/https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master/https:\/\/www.wolfdan.cn\/img/g"</span> <span class="variable">$n</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"操作了&#123;<span class="variable">$sum</span>&#125;个文件"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请仔细核查,建议使用VScode的git工具查看更改差异更香"</span></span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ bash chlink.sh</span><br><span class="line">请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏</span><br><span class="line">操作了&#123;146&#125;个文件</span><br><span class="line">请仔细核查,建议使用VScode的git工具查看更改差异更香</span><br></pre></td></tr></table></figure><p></p><p><strong><font color="red">真香</font></strong><br><img data-src="https://img-blog.csdnimg.cn/20200304172636510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h2 id="背景三代码编写"><a href="#背景三代码编写" class="headerlink" title="背景三代码编写"></a>背景三代码编写</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ vim chlink.sh</span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ cat chlink.sh</span><br><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏"</span></span><br><span class="line">sum=0</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> `find . -name <span class="string">"*.md"</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        ((sum++))</span><br><span class="line">        <span class="comment">#sed -i "s/https:\/\/raw.githubusercontent.com\/wolfdan666\/BlogPic\/master\//https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master\//g" $n</span></span><br><span class="line">        <span class="comment">#sed -i "s/https:\/\/gitee.com\/wolfdan\/BlogPic\/raw\/master/https:\/\/www.wolfdan.cn\/img/g" $n</span></span><br><span class="line">        sed -i <span class="string">"s/https:\/\/www.wolfdan.cn\/img/https:\/\/cdn.jsdelivr.net\/gh\/wolfdan666\/BlogPic/g"</span> <span class="variable">$n</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"操作了&#123;<span class="variable">$sum</span>&#125;个文件"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"请仔细核查,建议使用VScode的git工具查看更改差异更香"</span></span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$ bash chlink.sh</span><br><span class="line">请开始你的表演---脚本出自:www.wolfdan.cn  , 作者: 单林敏</span><br><span class="line">操作了&#123;149&#125;个文件</span><br><span class="line">请仔细核查,建议使用VScode的git工具查看更改差异更香</span><br><span class="line"></span><br><span class="line">单林敏@DESKTOP-A7T3V67 MINGW64 /f/hexo/blog/<span class="built_in">source</span> (master)</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200312143417669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><h3 id="VScode初步检查"><a href="#VScode初步检查" class="headerlink" title="VScode初步检查"></a>VScode初步检查</h3><p>用vscode的git查看十分方便,还可以随时撤销更改<br><img data-src="https://img-blog.csdnimg.cn/2020022711331780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h3 id="hexo-s检查"><a href="#hexo-s检查" class="headerlink" title="hexo s检查"></a>hexo s检查</h3><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>检查<br><img data-src="https://img-blog.csdnimg.cn/20200227113653692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h1 id="Have-fun-with-shell"><a href="#Have-fun-with-shell" class="headerlink" title="Have fun with shell"></a>Have fun with shell</h1><p>shell真的好爽,自动化脚本,减去人工频繁操作</p><h2 id="我因为背景二更新文章小插曲"><a href="#我因为背景二更新文章小插曲" class="headerlink" title="我因为背景二更新文章小插曲"></a>我因为背景二更新文章小插曲</h2><p>因为hexo没有文章分类，我100多篇博文，所以很难找，然后用shell查找非常愉悦</p><p><img data-src="https://img-blog.csdnimg.cn/20200304173712259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVfZ2l2ZV91cF9kYW4=,size_16,color_FFFFFF,t_70" alt></p><h1 id="注"><a href="#注" class="headerlink" title="注"></a>注</h1><p>由于CSDN写技术博文越来越方便了,所以以后自己的技术博文可能都会放到CSDN上面,今后本网站偶尔发布比较重要的技术博文的图片也可能将直接是链接到CSDN上的(因为加载更快),然后自己的网站将会趋向于发表自己的一些心得体会</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      使用shell自动修改多个文件中的链接成为其他链接_shell的美妙
    
    </summary>
    
      <category term="shell" scheme="https://www.wolfdan.cn/categories/shell/"/>
    
    
      <category term="shell" scheme="https://www.wolfdan.cn/tags/shell/"/>
    
      <category term="blog" scheme="https://www.wolfdan.cn/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>ARSTB打卡第44周[44/521]</title>
    <link href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC44%E5%91%A8-44-521/"/>
    <id>https://www.wolfdan.cn/ARSTB打卡第44周-44-521/</id>
    <published>2020-02-18T08:50:45.000Z</published>
    <updated>2020-03-12T06:31:43.045Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2_%E4%BA%8C%E6%AC%A1.cpp" target="_blank" rel="noopener">LeetCode/3_无重复字符的最长子串</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/better-programming/a-list-of-fun-things-you-can-build-as-a-developer-bc07fd21c6e3" target="_blank" rel="noopener">A List of Fun Things You Can Build as a Developer</a><br>这个博主分享了一些小的项目,我们可以用来练手,让自己的技术有所成长</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104376551" target="_blank" rel="noopener">设置用户ID位是什么意思</a></p><p><a href="https://www.debian.org/doc/manuals/debian-reference/ch02.zh-cn.html#_literal_apt_literal_vs_literal_apt_get_literal_literal_apt_cache_literal_vs_literal_aptitude_literal" target="_blank" rel="noopener">Debian系__命令行中的基础软件包管理操作_来自Debian官网</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104456787" target="_blank" rel="noopener">函数指针和指针函数_整理</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104362202" target="_blank" rel="noopener">apue.h不存在,以及apue源码下载编译的解决方法</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104401236" target="_blank" rel="noopener">外排序-处理极大量数据的排序算法—5 亿整数的大文件排序的思路</a></p><h1 id="Book-《你总说没事-但我知道你偷偷哭过很多次》"><a href="#Book-《你总说没事-但我知道你偷偷哭过很多次》" class="headerlink" title="Book_《你总说没事,但我知道你偷偷哭过很多次》"></a>Book_《你总说没事,但我知道你偷偷哭过很多次》</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/%E4%B8%80%E7%A6%85_%E4%BD%A0%E6%80%BB%E8%AF%B4%E6%B2%A1%E4%BA%8B.jpg" width="20%" height="20%"></p><p>这本书很有治愈功能,写尽人生善良,挺好的,虽然人生险恶,但总会有人做正确的事情</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      无重复字符的最长子串 A List of Fun Things You Can Build as a Developer 设置用户ID位是什么意思 Debian系__命令行中的基础软件包管理操作_来自Debian官网 函数指针和指针函数_整理 apue.h不存在,以及apue源码下载编译的解决方法 外排序-处理极大量数据的排序算法--5 亿整数的大文件排序的思路 《你总说没事,但我知道你偷偷哭过很多次》 虽然人生险恶,但总会有人做正确的事情
    
    </summary>
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/categories/ARSTB/"/>
    
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/tags/ARSTB/"/>
    
  </entry>
  
  <entry>
    <title>ARSTB打卡第43周[43/521]</title>
    <link href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC43%E5%91%A8-43-521/"/>
    <id>https://www.wolfdan.cn/ARSTB打卡第43周-43-521/</id>
    <published>2020-02-16T10:02:38.000Z</published>
    <updated>2020-03-12T06:31:42.740Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/22_%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90.cpp" target="_blank" rel="noopener">LeetCode/22_括号生成</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/better-programming/4-tells-whether-youre-a-great-software-engineer-b0e496ed8f3b" target="_blank" rel="noopener">Four Ways to Know if You’re a Great Software Engineer</a><br>是啊，对于问题和代码核心，要有主人翁意识</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://www.bilibili.com/watchlater/?spm_id_from=333.6.b_62696c692d6865616465722d6d.16#/av37065233/p7" target="_blank" rel="noopener">北京大学肖臻老师《区块链技术与应用》公开课</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><h2 id="Code哲学"><a href="#Code哲学" class="headerlink" title="Code哲学"></a>Code哲学</h2><p>来自Golang语言的学习中的截图</p><h3 id="ack-接纳错误-去改善"><a href="#ack-接纳错误-去改善" class="headerlink" title="ack_接纳错误_去改善"></a>ack_接纳错误_去改善</h3><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/Code%E5%93%B2%E5%AD%A6/ack_%E6%8E%A5%E7%BA%B3%E9%94%99%E8%AF%AF_%E5%8E%BB%E6%94%B9%E5%96%84.jpg" alt="ack_接纳错误_去改善"></p><h3 id="在错误中成长"><a href="#在错误中成长" class="headerlink" title="在错误中成长"></a>在错误中成长</h3><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/Code%E5%93%B2%E5%AD%A6/%E5%9C%A8%E9%94%99%E8%AF%AF%E4%B8%AD%E6%88%90%E9%95%BF20200211174257.jpg" alt="在错误中成长"></p><h3 id="接收失败可能是件好事-至少可以重来-而非一直阻塞"><a href="#接收失败可能是件好事-至少可以重来-而非一直阻塞" class="headerlink" title="接收失败可能是件好事_至少可以重来_而非一直阻塞"></a>接收失败可能是件好事_至少可以重来_而非一直阻塞</h3><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/Code%E5%93%B2%E5%AD%A6/%E6%8E%A5%E6%94%B6%E5%A4%B1%E8%B4%A5%E5%8F%AF%E8%83%BD%E6%98%AF%E4%BB%B6%E5%A5%BD%E4%BA%8B_%E8%87%B3%E5%B0%91%E5%8F%AF%E4%BB%A5%E9%87%8D%E6%9D%A5_%E8%80%8C%E9%9D%9E%E4%B8%80%E7%9B%B4%E9%98%BB%E5%A1%9E.jpg" alt="接收失败可能是件好事_至少可以重来_而非一直阻塞"></p><h3 id="未来未可知-多做准备"><a href="#未来未可知-多做准备" class="headerlink" title="未来未可知_多做准备"></a>未来未可知_多做准备</h3><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/Code%E5%93%B2%E5%AD%A6/%E6%9C%AA%E6%9D%A5%E6%9C%AA%E5%8F%AF%E7%9F%A5_%E5%A4%9A%E5%81%9A%E5%87%86%E5%A4%87.jpg" alt="未来未可知_多做准备"></p><h3 id="测试期疯狂试错，以让将来正式发布能稳定-爱情和生活应该也一样"><a href="#测试期疯狂试错，以让将来正式发布能稳定-爱情和生活应该也一样" class="headerlink" title="测试期疯狂试错，以让将来正式发布能稳定(爱情和生活应该也一样)"></a>测试期疯狂试错，以让将来正式发布能稳定(爱情和生活应该也一样)</h3><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/Code%E5%93%B2%E5%AD%A6/%E6%B5%8B%E8%AF%95%E6%9C%9F%E7%96%AF%E7%8B%82%E8%AF%95%E9%94%99%EF%BC%8C%E4%BB%A5%E8%AE%A9%E5%B0%86%E6%9D%A5%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83%E8%83%BD%E7%A8%B3%E5%AE%9A_%E7%88%B1%E6%83%85%E5%92%8C%E7%94%9F%E6%B4%BB%E5%BA%94%E8%AF%A5%E4%B9%9F%E4%B8%80%E6%A0%B7.jpg" alt="测试期疯狂试错，以让将来正式发布能稳定(爱情和生活应该也一样)"></p><h2 id="《被讨厌的勇气》"><a href="#《被讨厌的勇气》" class="headerlink" title="《被讨厌的勇气》"></a>《被讨厌的勇气》</h2><p>这周的share就是下面的book，因为我觉得这周最大的技术收获也是下面书中说的一些人生观点</p><h1 id="Book《被讨厌的勇气》"><a href="#Book《被讨厌的勇气》" class="headerlink" title="Book《被讨厌的勇气》"></a>Book《被讨厌的勇气》</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94.jpg" width="20%" height="20%"></p><p>书中说书中的观点要真正做到知行合一要很久</p><p>甚至也有人说要想真正理解阿德勒心理学直至改变生活方式，需要“相当于自身岁数一半的时间”。也就是说，如果40岁开始学的话，需要20年也就是到60岁才能学会。20岁开始学的话，加上10年，得到30岁才能学会。你还年轻，学得越早就越有可能早日改变。在能够早日改变这个意义上，你比世上的长者们都要超前一步。为了改变自己创造一个新的世界，在某种意义上你比我更超前。可以迷路也可以走偏，只要不再从属于纵向关系，不畏惧惹人讨厌地自由前行就可以。如果所有人都能够认为“年轻人更超前”的话，世界就会发生重大改变。</p><hr><p>感知到的观点如下：</p><h2 id="使用目的论看世界，而非原因论"><a href="#使用目的论看世界，而非原因论" class="headerlink" title="使用目的论看世界，而非原因论"></a>使用目的论看世界，而非原因论</h2><ul><li>使用原因论去说自己因为心灵创伤所以不敢，是对于自己不去改变的当下有”善”(有好处)</li><li>心理创伤的原因论其实是可以不成立的，自己可以懦弱地选择原因论而不去改变成为更好的自己，而可以选择目的论，接纳自己是因为不敢去做的目的才选择的说自己有心灵的创伤.</li><li>如果我们想要改变我们的生活，我们可以勇敢地接受目的论，因为我想干什么，所以我选择这样做</li></ul><p>这一点很像我的人生格言中的”心外无物”(自己可以选择一切的看法),然后知行合一(实则是对于当下的”善”，只有真正认知了目的论，选择了改变成更好的自己，才能不选择小”善”，而是选择大”善”)</p><h2 id="自由，课题分离，横向关系"><a href="#自由，课题分离，横向关系" class="headerlink" title="自由，课题分离，横向关系"></a>自由，课题分离，横向关系</h2><p>一切的烦恼来自于人际间的关系<br>在人际关系中，我们不在乎他人的看法便为自由<br>我们做好自己认为正确的事情，对于他们做到自己应该做的，不用去管对方怎么看你就是课题分离，因为我们自己的课题是我们自己对别人做什么，而别人怎么看我们是别人的课题，如果我们太在乎别人的课题就会让我们陷入困境，让我们费尽心力，同时也不会让我们感到自由，而且也会让别人感受不到平等<br>因为对别人的课题进行干涉的人一般有点像家人对自己的孩子进行干涉一样，是纵向关系，而非平等的横向关系<br>所以我们应该做好自己的课题，对于他人给予关心，让对方知道你在，可以能够获取到你的帮助就好，剩下的看别人怎么操作<br>就像把马引导到水边，喝不喝水由它自己决定</p><h2 id="人际关系三板斧"><a href="#人际关系三板斧" class="headerlink" title="人际关系三板斧"></a>人际关系三板斧</h2><p><strong>自我接纳，他者信赖，他者贡献</strong></p><h3 id="自我接纳"><a href="#自我接纳" class="headerlink" title="自我接纳"></a>自我接纳</h3><p>接纳自己的，只要存在就有价值—&gt;可以看后文</p><h3 id="他者信赖"><a href="#他者信赖" class="headerlink" title="他者信赖"></a>他者信赖</h3><p>并不是说做到了肯定性达观的自我接纳就可以获得共同体感觉。这是事实。还要把”对自己的执著”变成”对他人的关心”，这就是绝对不可以缺少的第二个关键词——“他者信赖”。</p><p>在相信他人的时候不附加任何条件。即使没有足以构成信用的客观依据也依然相信，不考虑抵押之类的事情，无条件地相信。这就是信赖。青年：无条件地相信？又是先生您津津乐道的邻人爱吗？哲人：当然，无条件地相信他人有时也会遭遇背叛。就好比贷款保证人有时也会蒙受损失一样。即使如此却依然继续相信的态度就叫作信赖。青年：这是缺心眼儿的老好人！先生也许支持性善说，但我却主张性恶说，无条件地相信陌生人会遭人利用！哲人：也许会被欺骗、被利用。但是，请你站在背叛者的立场上去想一想。如果有人即使被你背叛了，也依然继续无条件地相信你，无论遭受了什么样的对待依然信赖你。你还能对这样的人屡次做出背信弃义的行为吗？</p><p>信赖的反义词？是怀疑。假设你把人际关系的基础建立在”怀疑”之上。怀疑他人、怀疑朋友、甚至怀疑家人或恋人，生活中处处充满怀疑。那么，这样究竟会产生什么样的关系呢？对方也能够瞬时感觉到你怀疑的目光，会凭直觉认为”这个人不信赖我”。你认为这样还能建立起什么积极的关系吗？只有我们选择了无条件的信赖，才可以构筑更加深厚的关系。青年：嗯。哲人：阿德勒心理学的观点很简单。你现在认为”无条件地信赖别人只会遭到背叛”。但是，决定背不背叛的不是你，那是他人的课题。你只需要考虑”我该怎么做”。”如果对方讲信用我也给予信任”，这只不过是一种基于抵押或条件的信用关系。<br>青年：您是说这也是课题分离？<br>哲人：是的。就像我反复提到的一样，如果能够进行课题分离，那么人生就会简单得令你吃惊。但是，即使理解课题分离的原理和原则比较容易，实践起来也非常困难。这一点我也承认。</p><h3 id="他者贡献"><a href="#他者贡献" class="headerlink" title="他者贡献"></a>他者贡献</h3><p>就是通过为共同体也就是他人服务能够体会到”我对别人有用”，不是被别人评价说”很好”，而是主观上就能够认为”我能够对他人做出贡献”，只有这样我们才能够真正体会到自己的价值。之前讨论到的”共同体感觉”或”鼓励”的话题也与此紧密相关。</p><p>他者贡献的意思并不是自我牺牲。相反，阿德勒把为他人牺牲自己人生的人称作”过度适应社会的人”，并对此给予警示。并且，请你想一想。我们只有在感觉到自己的存在或行为对共同体有益的时候，也就是体会到”我对他人有用”的时候，才能切实感受到自己的价值。是这样吧？也就是说，他者贡献并不是舍弃”我”而为他人效劳，它反而是为了能够体会到”我”的价值而采取的一种手段。</p><p><strong>幸福感是自己体会到自己的他者贡献，而非他人”评价”感受到了</strong></p><h2 id="共同体，归属感"><a href="#共同体，归属感" class="headerlink" title="共同体，归属感"></a>共同体，归属感</h2><p>如果按照字面意思把阿德勒所说的”共同体”概念想象成实际的宇宙或非生物的话，那就会很难理解。当前我们可以理解成共同体范围”无限大”。<br>因为共同体足够大，那我们在小的范围内遇到的都是不喜欢自己的人的话，还可以在其他的地方获得”可以在这里”的感受，也就是总能找到一个地方让自己有归属感</p><h2 id="存在标准而非行为标准"><a href="#存在标准而非行为标准" class="headerlink" title="存在标准而非行为标准"></a>存在标准而非行为标准</h2><p>存在标准上的感谢就是这么回事。病危状态的母亲尽管什么都做不了，但仅仅她活着这件事本身就可以支撑你和家人的心，发挥巨大的作用。你也是一样。如果你危在旦夕的时候，周围的人也会因为”你还存在着”这件事本身而感到无比高兴，也就是并不要求什么直接行为，仅仅是平安无事地存在着就非常难能可贵。至少没有不可以这样想的理由。对于自己，不要用”行为”标准去考虑，而要首先从”存在”标准上去接纳。</p><p>我们对于孩子的期待，不能用理想化的100分开始评价孩子，然后没有一项就减一分，而应该使用加法，孩子有一项优点就加一些分数，这也类似于存在标准的角度去思考而非行为标准去思考</p><h2 id="人生的意义，此时此刻"><a href="#人生的意义，此时此刻" class="headerlink" title="人生的意义，此时此刻"></a>人生的意义，此时此刻</h2><p>人生的意义没有普世的结论，每个人都可以给自己的人生赋予不同的人生意义</p><p>请你这样想。人生就像是在每一个瞬间不停旋转起舞的连续的刹那。并且，暮然四顾时常常会惊觉：“已经来到这里了吗？”在跳着小提琴之舞的人中可能有人成了专业小提琴手，在跳着司法考试之舞的人中也许有人成为律师，或许还有人跳着写作之舞成了作家。当然，也有可能有着截然不同的结果。但是，所有的人生都不是终结“在路上”，只要跳着舞的“此时此刻”充实就已经足够。</p><p>旅行的目的是什么？例如你要去埃及旅行。这时候你会想尽早尽快地到达胡夫金字塔，然后再以最短的距离返回吗？如果是这样的话，那就不能称为旅行。跨出家门的那一瞬间，“旅行”已经开始，朝着目的地出发途中的每一个瞬间都是旅行。当然，即使因为某些事情而没能够到达金字塔，那也并非没有旅行。这就是现实性的人生。</p><p>如果登山的目的是登上山顶，那它就是潜在性的行为。说得极端点儿，乘坐电梯登上山顶，逗留5分钟，然后再乘电梯回来也可以。当然，如果没能到达山顶的话，其登山活动就等于失败。但是，如果登山的目的不是登顶而是登山本身，那就可以说是现实性的活动。最终能不能登上山顶都没有关系。</p><p>青年：是的，我承认！认真过好“此时此刻”、不去设定根本不存在的线，这些我的确认同！但是先生，我找不到理想和目标，就连应该跳什么舞都不知道，我的“此时此刻”只有一些毫无用处的刹那！<br>哲人：没有目标也无妨。认真过好“此时此刻”，这本身就是跳舞。不要把人生弄得太深刻。请不要把认真和深刻混为一谈。<br>青年：认真但不深刻。<br>哲人：是的。人生很简单，并不是什么深刻的事情。如果认真过好了每一个刹那，就没有什么必要令其过于深刻。并且还要记住一点。站在现实性角度的时候，人生总是处于完结状态。<br>青年：完结状态？<br>哲人：你还有我，即使生命终结于“此时此刻”，那也并不足以称为不幸。无论是20岁终结的人生还是90岁终结的人生，全都是完结的、幸福的人生。</p><p>青年：当人生是连续刹那的时候，当人生只存在于“此时此刻”的时候，人生的意义究竟是什么呢？我是为了什么出生、经受满是苦难的生命、最后迎来死亡的呢？我不明白这其中的原因。<br>哲人：人生的意义是什么？人为了什么而活？当有人提出这个问题的时候，阿德勒的回答是：“并不存在普遍性的人生意义。”<br>青年：人生没有意义？<br>哲人：例如战祸或天灾，我们所居住的世界充满了各种不合理的事情。我们也不可能在被卷入战祸而丧命的孩子们面前谈什么“人生意义”。也就是说，人生并不存在可以作为常识来讲的意义。但是，如果面对这种不合理的悲剧而不采取任何行动的话，那就等于是在肯定己经发生的悲剧。无论发生何种状况，我们都必须采取一些行动，必须对抗康德所说的倾向性。</p><p>哲人：所以阿德勒在说了“并不存在普遍性的人生意义”之后还说：“人生意义是自己赋予自己的。”<br>青年：自己赋予自己？什么意思？<br>哲人：年轻时，我祖父的脸部曾受到了重创，这实在是不合理、非人道的灾难。当然，也可能有人会因此而选择“世界太残酷”或者“人们都是我的敌人”之类的生活方式。但是，我相信祖父一定是选择了“人们都是我的伙伴，世界非常美妙”这样的生活方式。阿德勒所说的“人生的意义是由你自己赋予自己的”，就正是这个意思。人生没有普遍性的意义。但是，你可以赋予这样的人生以意义，而能够赋予你的人生以意义的只有你自己。</p><h2 id="知行合一"><a href="#知行合一" class="headerlink" title="知行合一"></a>知行合一</h2><p>希望认真生活非常重要，但仅仅如此还不够。阿德勒说：”人的烦恼皆源于人际关系。“如果不懂得如何构筑良好的人际关系，有时候就会因为想要满足他人期待或者不想伤害他人而导致虽有自己主张但无法传达，最终不得不放弃自己真正想做的事情。这样的人的确很受周围人的欢迎，或许讨厌他（她）们的人也很少；但另一方面，他（她）们也无法过自己的人生。对于像本书中出现的青年一样，已经接受了现实洗礼、烦恼多多的年轻人来说，哲人所说的”这个世界无比简单，任何人都可以随时获得幸福。“这样的话也许很不可思议。自称”我的心理学是所有人的心理学“的阿德勒也像柏拉图一样没有使用专业术语，而且提出了改善人际关系的”具体对策“。如果有人认为难以接纳阿德勒思想，那是因为这种思想是反常识观点的集大成者，<strong>而且要想理解它也需要日常生活中的实践：即使没有语言方面的难度，或许也会有像在严冬里想象酷暑一样的困难。</strong>但我还是希望大家能够掌握解开人际关系问题的关键。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode/22_括号生成 Four Ways to Know if You&#39;re a Great Software Engineer 对于问题和代码核心，要有主人翁意识 北京大学肖臻老师《区块链技术与应用》公开课 Golang中学到的Code哲学《被讨厌的勇气》读书心得分享
    
    </summary>
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/categories/ARSTB/"/>
    
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/tags/ARSTB/"/>
    
  </entry>
  
  <entry>
    <title>ARSTB打卡第42周[42/521]</title>
    <link href="https://www.wolfdan.cn/ARSTB%E6%89%93%E5%8D%A1%E7%AC%AC42%E5%91%A8-42-521/"/>
    <id>https://www.wolfdan.cn/ARSTB打卡第42周-42-521/</id>
    <published>2020-02-09T06:55:31.000Z</published>
    <updated>2020-03-12T06:31:42.438Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>坚持ARST打卡已经到了第42周了，我想我受益良多，最近看了《富兰克林自传》，深感看书的重要性，因此决定在自己的ARST每周打卡中加上一项，就是每周看一本书(尽量每天挤出一小时)</p><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/21_%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8.cpp" target="_blank" rel="noopener">LeetCode/21_合并两个有序链表</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/swlh/stop-spending-so-much-time-in-your-head-76b62942f878" target="_blank" rel="noopener">Stop Spending So Much Time In Your Head</a><br>看这篇文章的时候自己是有点困的，所以看了好久<br>感觉写得挺糟糕的<br>不过此文要表达的观点我还是get到了<br>就是99%的大脑想法都是无用的，继续想它们会让我们浪费时间，所以我们只需要接纳这些想法，然后开始做事</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://juejin.im/entry/5d3644ef6fb9a07ed137136a" target="_blank" rel="noopener">IDEA开发Spark应用实战(Scala)</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104168055" target="_blank" rel="noopener">虚拟机Centos6开机黑屏解决方法</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104168406" target="_blank" rel="noopener">VM复制粘贴不生效</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104169136" target="_blank" rel="noopener">Centos6更改默认Python2.x为Python3.x以及注意事项_yum，ibus的异常处理</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104183722" target="_blank" rel="noopener">HDFS性质探索</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104185374" target="_blank" rel="noopener">Idea本地运行spark，操作HDFS（spark-without-hadoop版的spark）</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104193455" target="_blank" rel="noopener">spark-submit运行idea生成的jar包无法找到主类</a></p><h1 id="Book《富兰克林自传》"><a href="#Book《富兰克林自传》" class="headerlink" title="Book《富兰克林自传》"></a>Book《富兰克林自传》</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/Franklin.jpg" width="20%" height="20%"></p><p>看了这本书之后，让我感受到富兰克林先生也是一个普通的人，因为他也有七情六欲，他也会冲动，他也会上当受骗，他也会犯错，也会交到一些不好的朋友，同样的，我也能看到富兰克林先生通过自己的积极思考，不断学习不断改进，不断认识自己的错误，改正自己的错误，最终通过自己的勤勉努力，积极思考，保持谦卑好奇，远离错误，最终成就了自己的一番事业</p><p>因此我感谢这本书，让我知道了一个普通的人也可以通过自己坚持不懈地思考和正确地努力来成就自己，成为更好的自己，也能对社会做出自己的贡献，这也是很好的生命的意义</p><p>他们以前以书会友，我现在信息社会却越来越孤立<br>他们以前用航船漂洋过海，我现在宅在家里却只想回到家乡过上养老般的生活</p><p>所以我需要反思自己，跨出自己的舒适圈，睁眼看世界</p><p>学最好的别人，做最好的自己，让他人让社会也因自己而有所改善，那么此生就足矣、加油。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode/21_合并两个有序链表 IDEA开发Spark应用实战(Scala) 关于VMware运行Centos6以及IDEA本地操作虚拟机集群中的HDFS进行Spark计算的一些分享 看完《富兰克林自传》之后我要反思自己，跨出自己的舒适圈，睁眼看世界
    
    </summary>
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/categories/ARSTB/"/>
    
    
      <category term="ARSTB" scheme="https://www.wolfdan.cn/tags/ARSTB/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第41周[41/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC41%E5%91%A8-41-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第41周-41-521/</id>
    <published>2020-02-02T03:24:32.000Z</published>
    <updated>2020-03-12T06:31:53.312Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/19_%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.cpp" target="_blank" rel="noopener">LeetCode/19_删除链表的倒数第N个节点</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://codeburst.io/10-top-programming-languages-in-2019-for-developers-a2921798d652" target="_blank" rel="noopener">10 top Programming Languages in 2020 for Businesses</a><br>语言一直在变，唯一不变的是，我们学习的方法，解决问题的思考方式，我们不仅仅是一个程序员，更是一个让世界变得更加美好的Problem Solver.</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://zhuanlan.zhihu.com/p/99398378" target="_blank" rel="noopener">深入浅出理解 Spark 部署与工作原理</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104127477" target="_blank" rel="noopener">linux常用命令</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104127028" target="_blank" rel="noopener">我的vim使用技巧</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104125190" target="_blank" rel="noopener">给Vim配置Scala语法高亮显示_vim粘贴模式防止复制粘贴的内容不一致（vim中无格式的粘贴方式）</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104122017" target="_blank" rel="noopener">kafka实操笔记</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104122623" target="_blank" rel="noopener">VM虚拟机系统时间同步网络时间并登录用户自动校正时间</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104113283" target="_blank" rel="noopener">Spark SQL学习笔记</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104106841" target="_blank" rel="noopener">RDD编程学习笔记3_数据读写</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104108696" target="_blank" rel="noopener">HBase1.1.x部署在Hadoop2.6.0上(3台vm虚拟机的部分分布式)</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104105386" target="_blank" rel="noopener">RDD编程学习笔记2_键值对RDD_综合案例-计算每种图书的每天平均销量</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104104462" target="_blank" rel="noopener">RDD编程基础学习笔记1_Spark优雅的wordCount</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104100638" target="_blank" rel="noopener">scp不覆盖同名文件，覆盖同名文件，彻底覆盖（个人实践所得）</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104094490" target="_blank" rel="noopener">Exception in thread “main” java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream</a></p><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104094259" target="_blank" rel="noopener">yum的默认安装路径</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode/19_删除链表的倒数第N个节点 深入浅出理解 Spark 部署与工作原理 linux常用命令 我的vim使用技巧 给Vim配置Scala语法高亮显示_vim粘贴模式防止复制粘贴的内容不一致（vim中无格式的粘贴方式） kafka实操笔记 VM虚拟机系统时间同步网络时间并登录用户自动校正时间 Spark SQL学习笔记 RDD编程学习笔记3_数据读写 HBase1.1.x部署在Hadoop2.6.0上(3台vm虚拟机的部分分布式) RDD编程学习笔记2_键值对RDD_综合案例-计算每种图书的每天平均销量 RDD编程基础学习笔记1_Spark优雅的wordCount scp不覆盖同名文件，覆盖同名文件，彻底覆盖（个人实践所得） Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError_org/apache/hadoop/fs/FSDataInputStream yum的默认安装路径 10 top Programming Languages in 2020 for Businesses 语言一直在变，唯一不变的是，我们学习的方法，解决问题的思考方式，我们不仅仅是一个程序员，更是一个让世界变得更加美好的Problem Solver.
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
      <category term="Spark" scheme="https://www.wolfdan.cn/tags/Spark/"/>
    
      <category term="Vim" scheme="https://www.wolfdan.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第40周[40/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC40%E5%91%A8-40-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第40周-40-521/</id>
    <published>2020-01-25T13:40:29.000Z</published>
    <updated>2020-03-12T06:31:53.008Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/18_%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.cpp" target="_blank" rel="noopener">LeetCode/18_四数之和</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://www.bilibili.com/video/av84773184" target="_blank" rel="noopener">当涉及高效能时，为什么大多数人都会犯错？</a><br>【当涉及高效能时，为什么大多数人都会犯错？】马可·奥勒留曾说，人生的目标不是与大多数人为伍，而是避免让自己加入那些精神错乱的人的行列。如果你做每个人都在做的事，你就没有突出自我，甚至可能陷入泥沼。<strong>百分之三的人能够达成非凡的成就，如果你不能打破常规，打破行规，你就会变成剩下的百分之九十七。</strong></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://zhuanlan.zhihu.com/p/56658358" target="_blank" rel="noopener">vmware 虚拟机三种网络模式—“桥接、NAT 、仅主机”区别？</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://blog.csdn.net/neve_give_up_dan/article/details/104081117" target="_blank" rel="noopener">VM虚拟机仅主机模式上网络</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode/18_四数之和 当涉及高效能时，为什么大多数人都会犯错？ 百分之三的人能够达成非凡的成就，如果你不能打破常规，打破行规，你就会变成剩下的百分之九十七 vmware 虚拟机三种网络模式—“桥接、NAT 、仅主机”区别？ VM虚拟机仅主机模式上网络
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第39周[39/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC39%E5%91%A8-39-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第39周-39-521/</id>
    <published>2020-01-19T12:39:00.000Z</published>
    <updated>2020-03-12T06:31:52.575Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/17_%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E5%92%8C%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.cpp" target="_blank" rel="noopener">LeetCode17_电话号码和字母组合</a></p><p>主要是char单个字符转化到string类型自己竟然不会…<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c = C[id][i];</span><br><span class="line"><span class="built_in">string</span> tp;</span><br><span class="line"><span class="built_in">stringstream</span> stream;</span><br><span class="line">stream &lt;&lt; c;</span><br><span class="line">tp = stream.str();</span><br></pre></td></tr></table></figure><p></p><p>然后自己最近学的Scala和Go都没有分号，导致自己写C++的时候老是忘了写分号..</p><h1 id="Reviews"><a href="#Reviews" class="headerlink" title="Reviews"></a>Reviews</h1><p><a href="https://medium.com/the-post-grad-survival-guide/5-signs-you-are-wasting-your-life-44e474935a53" target="_blank" rel="noopener">5 Signs You Are Wasting Your Life</a><br>If you routinely worry about what your friends, family, peers, or pop culture thinks of you, you may be letting your life slip by. Instead of doing what others approve of, find a guiding purpose that you can be true to even when the world turns against you.<br>对啊，如果我们太在意别人的看法，那我们很可能将会丢掉自己</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://www.icourse163.org/learn/XMU-1205811805?tid=1206617233#/learn/announce" target="_blank" rel="noopener">林子雨主讲-《Spark编程基础》</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p>这周的分享非技术分享，而是自己的一些心得(接Review)</p><p><strong>如果我们太在意别人的看法，那我们很可能将会丢掉自己</strong><br>以前总是觉得这个事情很容易做到，但是我发现我之前太年轻了，没有什么经历，因为我现在发现我之前理解的其他人是不包括自己很亲密的人的，直到最近，我表弟和我的一些姐姐们都说要好好珍惜假期放松，享受生活，不要把假期切割出来去提前实习上班，但是我觉得自己这一年是秋招的一年，要像考研的同学那样全力以赴，拼尽全力，也符合自己成为一名技术专家的目标，虽然被他们说的时候也会有纠结，也时常被他们看成憨憨，但是我觉得值得，所以做自己吧</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      LeetCode17_电话号码和字母组合 char转string 5 Signs You Are Wasting Your Life 林子雨主讲-《Spark编程基础》 如果我们太在意别人的看法，那我们很可能将会丢掉自己【自己的一些感受】
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第38周[38/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC38%E5%91%A8-38-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第38周-38-521/</id>
    <published>2020-01-12T06:17:39.000Z</published>
    <updated>2020-03-12T06:31:52.273Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/ARST/38-hu.jpg" alt="hu-38周考试结束,寒假快乐"></p><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/LeetCode/16_%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.cpp" target="_blank" rel="noopener">LeetCode/16_最接近的三数之和.cpp</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/@kevalpatel2106/why-should-you-learn-go-f607681fad65" target="_blank" rel="noopener">Why should you learn Go?</a></p><p>我认为将来的代码运行都是在大规模分布式集群服务器上，跑云应用程序SaaS(Soft as a Serive),现在很火的大数据，云计算，以及区块链都是主流使用golang开发，所以将来golang将成为必备工具之一了</p><p>解决好问题，让世界变得更加美好，自己也要拥有一些好的尚方宝剑，与你们共勉</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="http://dblab.xmu.edu.cn/blog/spark/" target="_blank" rel="noopener">子雨大数据之Spark入门教程（Scala版）</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://www.wolfdan.cn/next5-1%E5%8D%87%E7%BA%A7%E5%88%B0next7-7%E9%97%B2%E8%AE%B0%E6%97%A5%E5%BF%97/">next5.1升级到next7.7闲记日志</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      16_最接近的三数之和 Why should you learn Go? 子雨大数据之Spark入门教程（Scala版） next5.1升级到next7.7闲记日志
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>next5.1升级到next7.7闲记日志</title>
    <link href="https://www.wolfdan.cn/next5-1%E5%8D%87%E7%BA%A7%E5%88%B0next7-7%E9%97%B2%E8%AE%B0%E6%97%A5%E5%BF%97/"/>
    <id>https://www.wolfdan.cn/next5-1升级到next7-7闲记日志/</id>
    <published>2020-01-11T12:22:40.000Z</published>
    <updated>2020-03-12T06:32:02.770Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h1><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/beauty/water/lang.jpg" alt="lang"></p><h1 id="小感觉"><a href="#小感觉" class="headerlink" title="小感觉"></a>小感觉</h1><ul><li>valine-admin因为语法解析风格变化的原因，我无法使用个性化表情了</li><li>友链样式也是因为语法解析风格变化的原因，导致无法使用</li><li>内置了fanybox3</li><li>内置了很多以前要自己动手的东西</li><li>描述字段还是不能放照片</li><li>对于neat压缩js文件极其不友好,因为自己因此而得到<code>Asset render failed: js/utils.js</code>的各种文件压缩错误提示</li><li>图片可以显示描述字段了</li><li>相关文章好评</li><li>原来<code>math.enable:</code> <code>false</code>才是全部开始渲染—-由于之前自己写题解，很多都用了公式，所以就不贪图这一点渲染时间了，现在省事是重点(主要是花不了多久)</li><li>手机端的体验比起next5.1好太多了</li></ul><h1 id="大感觉"><a href="#大感觉" class="headerlink" title="大感觉"></a>大感觉</h1><ul><li>速度好像提升了一点点</li><li>语法解析风格大变(可能这就是为了提升速度而牺牲了一些灵活的扩展性吧)</li><li>所以扩展没有以前那么灵活了</li></ul><p><del>一天8小时都在折腾这个小破站了,真香</del></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      速度好像提升了一点点 语法解析风格大变 扩展没有以前那么灵活了
    
    </summary>
    
      <category term="next" scheme="https://www.wolfdan.cn/categories/next/"/>
    
    
      <category term="next" scheme="https://www.wolfdan.cn/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第37周[37/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC37%E5%91%A8-37-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第37周-37-521/</id>
    <published>2020-01-05T03:16:03.000Z</published>
    <updated>2020-03-12T06:31:51.967Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>中序非递归遍历树 实现 树的中序迭代器<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">TreeNode *root = new TreeNode(1);</span></span><br><span class="line"><span class="comment">root-&gt;left = new ... 2</span></span><br><span class="line"><span class="comment">....</span></span><br><span class="line"><span class="comment">// Please implement a class called NodeIterator, so that:</span></span><br><span class="line"><span class="comment">NodeIterator i(root);</span></span><br><span class="line"><span class="comment">i.hasNext(); // true</span></span><br><span class="line"><span class="comment">i.next(); // 4</span></span><br><span class="line"><span class="comment">i.next(); // 2</span></span><br><span class="line"><span class="comment">i.next(); // 1</span></span><br><span class="line"><span class="comment">i.next(); // 5</span></span><br><span class="line"><span class="comment">i.next(); // 3</span></span><br><span class="line"><span class="comment">i.hasNext(); // false</span></span><br><span class="line"><span class="comment">i.next(); // throw</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">TreeNode &#123;</span><br><span class="line">  <span class="keyword">int</span> val;</span><br><span class="line">  TreeNode *left;</span><br><span class="line">  TreeNode *right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NodeIterator</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> :</span><br><span class="line">        NodeIterator(TreeNode * root)&#123;</span><br><span class="line">            <span class="keyword">if</span>(root == <span class="literal">nullptr</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            TreeNode * tp = root;</span><br><span class="line"></span><br><span class="line">            check();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 建议使用着先访问hasNext函数</span></span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">hasNext</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !s.empty();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!hasNext()) <span class="keyword">throw</span> exception(<span class="string">"No more data."</span>);</span><br><span class="line"></span><br><span class="line">            tp = s.top();</span><br><span class="line">            <span class="keyword">int</span> ans = tp -&gt; val;</span><br><span class="line"></span><br><span class="line">            s.pop();</span><br><span class="line"></span><br><span class="line">            tp = tp -&gt; right;</span><br><span class="line"></span><br><span class="line">            check();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">// 自己不为nullptr放入</span></span><br><span class="line">            <span class="keyword">while</span>(tp != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">                s.push(tp);</span><br><span class="line">                tp = tp -&gt; left;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="built_in">stack</span>&lt;TreeNode*&gt; s;</span><br><span class="line">        TreeNode * tp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/the-ascent/how-i-learned-to-5x-my-income-10x-my-confidence-and-create-a-future-of-unlimited-possibility-d51620009fc7" target="_blank" rel="noopener">How I Learned to 5x My Income, 10x My Confidence, and Create a Future of Unlimited Possibility</a></p><p>这篇文章一点都不引人入胜，是一片鸡汤文，而且还是标题党水文，不过证明了自己阅读能力上升了一点点，看出了这是一篇大水文</p><p>不过有一个观点值得肯定的是 ： <strong>接纳自己，寻找自己的长处，然后为此感到自信，然后勇敢地挑战自己的边界</strong></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/jxq0816/article/details/103201600" target="_blank" rel="noopener">张小龙-年薪近3亿的微信之父，他是如何做到的？</a></p><p>情怀有时候真的能够当饭吃</p><p><del>其实之前自己看过一次类似内容的</del></p><h2 id="linux显示指定行的3种方法"><a href="#linux显示指定行的3种方法" class="headerlink" title="linux显示指定行的3种方法"></a>linux显示指定行的3种方法</h2><h3 id="一，从第3000行开始，显示1000行。即显示3000-3999行"><a href="#一，从第3000行开始，显示1000行。即显示3000-3999行" class="headerlink" title="一，从第3000行开始，显示1000行。即显示3000~3999行"></a>一，从第3000行开始，显示1000行。即显示3000~3999行</h3><p><code>cat filename | tail -n +3000 | head -n 1000</code></p><h3 id="二，显示1000行到3000行"><a href="#二，显示1000行到3000行" class="headerlink" title="二，显示1000行到3000行"></a>二，显示1000行到3000行</h3><p><code>cat filename| head -n 3000 | tail -n +1000</code></p><p><strong>注意两种方法的顺序</strong></p><p>分解：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示最后1000行</span></span><br><span class="line">    tail -n 1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从1000行开始显示，显示1000行以后的</span></span><br><span class="line">    tail -n +1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示前面1000行</span></span><br><span class="line">    head -n 1000</span><br></pre></td></tr></table></figure><p></p><h3 id="三，用sed命令"><a href="#三，用sed命令" class="headerlink" title="三，用sed命令"></a>三，用sed命令</h3><p><code>sed -n &#39;5,10p&#39; filename</code></p><p>这样你就可以只查看文件的第5行到第10行</p><h3 id="参考自"><a href="#参考自" class="headerlink" title="参考自"></a>参考自</h3><p>苏轶然： suanec - <a href="http://www.cnblogs.com/suanec/" target="_blank" rel="noopener">http://www.cnblogs.com/suanec/</a></p><h1 id="Share-看书分享"><a href="#Share-看书分享" class="headerlink" title="Share 看书分享"></a>Share 看书分享</h1><p>《Linux命令行与shell脚本编程大全》<br>在考试周的前一周，也是2020年的第一周，我把这本看了1/4的书定为本周读完计划，然后这一周没有复习，下周挑战5天三门考试的挑战(DSP数字信号处理,高频,单片机)<br>不过看完这本书是真香，自己对于linux命令行和shell脚本的理解有了一个大的框架，以后什么地方出了问题，我都能找到问题出在哪里了，这样非常有利于我更加熟练的使用linux操作系统，以及linux服务器，也为我后面看APUE(《Unix环境高级编程》)提供更加坚实的基础，为自己以后成为一个更加优秀的IT技术创造美好生活提供了一把瑞士军刀，冲冲冲</p><p>听说2020是程序员的本命年？ 2020-1024 = 996 ？ 233，但是<strong>我们不是普通的程序员，我们可以用技术创造更加美好的生活，让世界变得更好，更便捷，更安全，更智能</strong></p><p>推荐你们看这本书</p><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/books/linux-shell.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      中序非递归遍历树实现树的中序迭代器 How I Learned to 5x My Income, 10x My Confidence, and Create a Future of Unlimited Possibility 张小龙的故事 linux显示指定行的3种方法 书本推荐-Linux命令行与shell脚本编程大全 听说2020是程序员的本命年？ 2020-1024 = 996 ？ 233，但是我们不是普通的程序员，我们可以用技术创造更加美好的生活，让世界变得更好，更便捷，更安全，更智能
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第36周[36/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC36%E5%91%A8-36-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第36周-36-521/</id>
    <published>2019-12-29T04:33:01.000Z</published>
    <updated>2020-03-12T06:31:51.663Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/tree/master/%E5%89%91%E6%8C%87offer/%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">单链条选择排序极其探讨</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/inc./after-10-years-studying-sleep-the-u-s-military-just-revealed-something-eye-opening-about-caffeine-e7a9340e9998" target="_blank" rel="noopener">After 10 Years Studying Sleep, the U.S. Military Just Revealed Something Eye-Opening About Caffeine</a><br>我不太赞同文章里面狂喝咖啡保持警觉的观点，我也对咖啡因延长寿命持不同看法，至少我体验到的是喝完咖啡会很困，然后很精神，最后是不困但腰子痛…所以我觉得可能还有害身体，可能是我喝的咖啡品种不对吧</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/DrifterJ/article/details/7841810" target="_blank" rel="noopener">JNI与JNA性能比较</a><br><a href="https://blog.csdn.net/liming0931/article/details/7726590" target="_blank" rel="noopener">单链表排序之选择排序（赞）</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://www.wolfdan.cn/%E5%A4%8D%E5%88%B6%E7%A1%AC%E7%9B%98%E4%B8%AD%E7%9A%84Ubuntu%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98-%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98Deepin-Ubunntu%E5%8F%8C%E7%B3%BB%E7%BB%9F/">复制硬盘中的Ubuntu/Deepin到移动硬盘_实现移动硬盘Deepin+Ubunntu双系统(本周更新版)</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      单链条选择排序极其探讨 JNI与JNA性能比较 单链表排序之选择排序（赞） 复制硬盘中的Ubuntu/Deepin到移动硬盘_实现移动硬盘Deepin+Ubunntu双系统(更新版)
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第35周[35/521]</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC35%E5%91%A8-35-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第35周-35-521/</id>
    <published>2019-12-22T06:42:53.000Z</published>
    <updated>2020-03-12T06:31:51.352Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/f37611657bf21e0ca32fca2db04b9fadb696a314/%E5%89%91%E6%8C%87offer/%E6%A0%91/%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E9%81%8D%E5%8E%86%E6%A0%91/%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91.cpp" target="_blank" rel="noopener">非递归实现前中后序遍历二叉树</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://gen.medium.com/you-shouldnt-have-to-be-good-at-your-job-cb9dff706d7d" target="_blank" rel="noopener">You Shouldn’t Have to Be Good at Your Job</a><br>这篇文章有太多的生僻词，看了很久…对于下面这句讲中产阶层的话语感到印象极其深刻<br>A middle class must, by definition, have middling people in it. Middling people are not winners. Is that a crime?<br>根据定义，中产阶级必须有中产阶级。中间人不是赢家。那是犯罪吗？</p><p><strong>深刻的原因之一是因为自己昨天意识到自己没有走错ACM竞赛失败的阴影，今天冬至，又发现自己的简历被某个自己想去的公司直接刷掉了(原本以为至少能面试一下的)</strong></p><p><strong>当然这些都是因为自己想要走捷径，自己存在侥幸心理，所以从今天开始，winter always here, 脚踏实地地努力</strong></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://blog.csdn.net/mxsgoden/article/details/8821936" target="_blank" rel="noopener">进程和线程的区别？</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/tree/master/%E5%89%91%E6%8C%87offer/%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">各种排序的整理</a></p><p><a href="https://www.wolfdan.cn/eclipse%E6%90%AD%E5%BB%BAMapReduce%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/">eclipse搭建MapReduce代码编译环境+java.lang.NoClassDefFoundError-org/apache/hadoop/yarn/util/Apps</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      非递归实现前中后序遍历二叉树 You Shouldn’t Have to Be Good at Your Job 进程和线程的区别？ 各种排序的整理 eclipse搭建MapReduce代码编译环境+java.lang.NoClassDefFoundError-org/apache/hadoop/yarn/util/Apps
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>ARST打卡第34周[34/521]-思考专家的意义</title>
    <link href="https://www.wolfdan.cn/ARST%E6%89%93%E5%8D%A1%E7%AC%AC34%E5%91%A8-34-521/"/>
    <id>https://www.wolfdan.cn/ARST打卡第34周-34-521/</id>
    <published>2019-12-15T08:19:31.000Z</published>
    <updated>2020-03-12T06:31:51.047Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:19 GMT+0800 (GMT+08:00) --><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/tree/master/%E5%89%91%E6%8C%87offer/%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C" target="_blank" rel="noopener">连续子数组最大和</a><br><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/tree/master/%E4%B8%93%E9%A2%98%E7%BB%83%E4%B9%A0_%E8%B5%9B%E5%89%8D%E8%8A%B13%E5%91%A8%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86%E6%88%90%E6%9D%BF%E5%AD%90/FFT" target="_blank" rel="noopener">FFT</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><a href="https://medium.com/better-marketing/want-to-be-successful-in-your-20s-do-these-9-things-3568d92090eb?" target="_blank" rel="noopener">9 Things You Should Work on in Your 20s If You Want to Be Successful</a><br>Life only gets busier.<br>Too often, people say the phrase, “I will once I’m a bit further along.” But then they get a bit further along, and nothing changes. They just keep saying, “I’ll do it when I’m older. Later, when I have more time.”<br>But this is a dangerous cycle. Take five or 10 minutes, per day, and start practicing the habit of working on your emotional health now.<br>是啊，生命永远会变得更加忙碌，所以从现在就应该开始让自己变得更好，学会感恩，爱，与成长</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODYwMjI2MA==&amp;mid=2649744953&amp;idx=1&amp;sn=2023b6eb67c667db526ea5f4e60ee7fe&amp;chksm=bed3754289a4fc54baf472d259874f2fe5cea3eaa5971acf9149e923626f6336018905cbdcdc&amp;scene=0&amp;xtrack=1&amp;key=34d777dd6e51b793b82dd77b79dcbdc3e5637f07b5ac5fc5a9c5d51952361bd08fefd8ec54586493e4fd18ab7ec65798f3779b765e04a7a50340ae5bfcf98e50aa1a2eb22ea26268621893dda770a1b6&amp;ascene=1&amp;uin=NTg3MTYyNDY%3D&amp;devicetype=Windows+10&amp;version=62070158&amp;lang=zh_CN&amp;exportkey=AXeRnsy7oH8Lkj%2FKemNATms%3D&amp;pass_ticket=i6rdaLuhvvUMsMsdak82r7hcH32bF0SBUHoAvpEWpcQ%3D" target="_blank" rel="noopener">把你的 VS Code 打造成 C++ 开发利器</a></p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/SQL/%E5%85%B3%E4%BA%8Ecollation%E5%88%97%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8Ecollation%E5%88%97%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%80%9D%E8%80%83.sql" target="_blank" rel="noopener">ERROR 1215 (HY000)-Cannot add foreign key constraint中关于collation 列顺序思考排错过程</a></p><p><a href="https://github.com/wolfdan666/WolfEat3moreMeatEveryday/blob/master/SQL/%E7%BB%8F%E5%85%B8/%E5%8F%8C%E9%87%8D%E5%90%A6%E5%AE%9A.sql" target="_blank" rel="noopener">SQL双重否定</a></p><p><a href="https://www.wolfdan.cn/SQL%E4%B8%AD%E5%9B%A0%E4%B8%BAnull%E5%AF%BC%E8%87%B4%E7%9A%84%E7%A9%BA%E7%BB%93%E6%9E%9C/">SQL中因为null导致的空结果</a></p><p><a href="https://www.wolfdan.cn/vector%E5%8F%96size%E9%97%AE%E9%A2%98/">vector取size问题</a></p><h1 id="自己的小思考"><a href="#自己的小思考" class="headerlink" title="自己的小思考"></a>自己的小思考</h1><p>专家就是在一个相对较小的领域内把所有坑都踩过了的人,<strong>但是自己踩坑效率是很低的，所以平常一定要多看书，看源码分析，从使用工具的内核层面去了解，这样才能长期有效地避免掉入毫无头绪的坑中，这样的效率才是最高的，才能更快地成为一个方面的专家</strong></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      连续子数组最大和 FFT ERROR 1215 (HY000)-Cannot add foreign key constraint中关于collation列顺序思考排错过程 SQL双重否定 SQL中因为null导致的空结果 vector取size问题 把你的 VS Code 打造成 C++ 开发利器 是啊，生命永远会变得更加忙碌，所以从现在就应该开始让自己变得更好，学会感恩，爱，与成长
    
    </summary>
    
      <category term="ARST" scheme="https://www.wolfdan.cn/categories/ARST/"/>
    
    
      <category term="ARST" scheme="https://www.wolfdan.cn/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>vector取size问题</title>
    <link href="https://www.wolfdan.cn/vector%E5%8F%96size%E9%97%AE%E9%A2%98/"/>
    <id>https://www.wolfdan.cn/vector取size问题/</id>
    <published>2019-12-14T13:20:26.000Z</published>
    <updated>2020-03-12T06:32:04.675Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>最近迷上了<code>sizeof</code>,感觉比<code>sizeof()</code>炫酷多了<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> buff[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">// 对buff一系列操作</span></span><br><span class="line"><span class="keyword">int</span> n = <span class="keyword">sizeof</span> buff;</span><br></pre></td></tr></table></figure><p></p><h1 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h1><p>然后我就习惯性地使用着<code>sizeof</code>,直到我写了如下代码<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> tmp[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">-4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">-5</span>&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(tmp,tmp+<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">array</span>.empty()) n = <span class="keyword">sizeof</span> <span class="built_in">array</span>;</span><br><span class="line"><span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cout</span>&lt;&lt; <span class="built_in">array</span>[i] &lt;&lt; <span class="string">" "</span>; <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output :</span></span><br><span class="line"><span class="comment">// 1 -2 3 10 -4 7 2 -5 0 0 -1864443732 469806420 1 0 1376592 0 -1046104771 16040918 -1864443732 402697557 1385904 0 1376592 0</span></span><br></pre></td></tr></table></figure><p></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>原因分析:</p><h2 id="sizeof是对精确的数据类型操作"><a href="#sizeof是对精确的数据类型操作" class="headerlink" title="sizeof是对精确的数据类型操作"></a>sizeof是对精确的数据类型操作</h2><p>sizeof(type)<br>sizeof expression</p><p>1) Yields the size in bytes of the object representation of type.<br>2) Yields the size in bytes of the object representation of the type of expression, if that expression is evaluated.</p><h2 id="而vector是一个类"><a href="#而vector是一个类" class="headerlink" title="而vector是一个类"></a>而vector是一个类</h2><p>A std::vector is a class. It’s not the actual data, but a class that manages it.<br>Use std::vector.size() to get the size of the actual data.</p><p>所以应该是<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> tmp[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">-4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">-5</span>&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(tmp,tmp+<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">array</span>.empty()) n = <span class="built_in">array</span>.size();</span><br><span class="line"><span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cout</span>&lt;&lt; <span class="built_in">array</span>[i] &lt;&lt; <span class="string">" "</span>; <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// output : 1 -2 3 10 -4 7 2 -5</span></span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      A std::vector is a class. It&#39;s not the actual data, but a class that manages it. Use std::vector.size() to get the size of the actual data.
    
    </summary>
    
      <category term="C++" scheme="https://www.wolfdan.cn/categories/C/"/>
    
    
      <category term="C++" scheme="https://www.wolfdan.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SQL中因为null导致的空结果</title>
    <link href="https://www.wolfdan.cn/SQL%E4%B8%AD%E5%9B%A0%E4%B8%BAnull%E5%AF%BC%E8%87%B4%E7%9A%84%E7%A9%BA%E7%BB%93%E6%9E%9C/"/>
    <id>https://www.wolfdan.cn/SQL中因为null导致的空结果/</id>
    <published>2019-12-09T09:33:26.000Z</published>
    <updated>2020-03-12T06:32:03.734Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Mar 12 2020 14:56:20 GMT+0800 (GMT+08:00) --><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>无论SQL执行怎么样，都是得到空结果<br><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/SQL/null.png" alt></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>原因是 <code>group by</code> 和 <code>where</code> 之后只认识<code>true</code> or <code>false</code> ， 然而我的数据里面有null, <strong>null 和 比较运算符得到的结果是 <code>UNKNOW</code></strong> , 所以就会像上图中任何运算符都没有结果，所以大家如果遇到了同样的问题可以查看一下自己的数据</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>我用一个干净的数据测试了一下确实是这样的<br><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/SQL/%E9%AA%8C%E8%AF%81.jpg" alt></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="这里有很详细的探讨和代码，建议有兴趣的拓展阅读"><a href="#这里有很详细的探讨和代码，建议有兴趣的拓展阅读" class="headerlink" title="这里有很详细的探讨和代码，建议有兴趣的拓展阅读"></a>这里有很详细的探讨和代码，建议有兴趣的拓展阅读</h2><p><a href="https://www.cnblogs.com/killkill/archive/2010/09/04/1817266.html" target="_blank" rel="noopener">https://www.cnblogs.com/killkill/archive/2010/09/04/1817266.html</a></p><h3 id="提取上文大佬的结论"><a href="#提取上文大佬的结论" class="headerlink" title="提取上文大佬的结论"></a>提取上文大佬的结论</h3><ul><li>in/not in 的结果是依赖于“=”等值判断的结果；exists/not exists 虽然是判断集合是否为空，但通常里面的子查询做的是值判断</li><li>minus消灭了重复行！这就是前文所说的 not in 和 not exists 并非真正意义上的差集。</li></ul><h1 id="优化-写出鲁棒性更好的SQL！"><a href="#优化-写出鲁棒性更好的SQL！" class="headerlink" title="优化(写出鲁棒性更好的SQL！)"></a>优化(写出鲁棒性更好的SQL！)</h1><h2 id="优化依据"><a href="#优化依据" class="headerlink" title="优化依据"></a>优化依据</h2><p>in/not in 的结果是依赖于“=”等值判断的结果；exists/not exists 虽然是判断集合是否为空，但通常里面的子查询做的是值判断</p><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><p>所以在<code>group by</code>之前都执行以下<code>where \*.\* is not null</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sno,sname,<span class="keyword">avg</span>(Grade)</span><br><span class="line"><span class="keyword">from</span> student,sc</span><br><span class="line"><span class="keyword">where</span> student.sno=sc.sno</span><br><span class="line">    <span class="keyword">and</span> sdept=<span class="string">'CS'</span></span><br><span class="line">    <span class="keyword">and</span> sc.Grade <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sno <span class="keyword">having</span> <span class="keyword">avg</span>(grade) &gt;=</span><br><span class="line">    <span class="keyword">all</span>(</span><br><span class="line">        <span class="keyword">select</span> <span class="keyword">avg</span>(grade) <span class="keyword">from</span> student,sc <span class="keyword">where</span></span><br><span class="line">            student.sno=sc.sno</span><br><span class="line">            <span class="keyword">and</span> sdept=<span class="string">'CS'</span></span><br><span class="line">            <span class="keyword">and</span> sc.grade <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> student.sno);</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jsdelivr.net/gh/wolfdan666/BlogPic/SQL/%E4%BC%98%E5%8C%96.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      SQL中因为null导致的空结果 in/not in 的结果是依赖于“=”等值判断的结果；exists/not exists 虽然是判断集合是否为空，但通常里面的子查询做的是值判断 minus消灭了重复行！这就是前文所说的 not in 和 not exists 并非真正意义上的差集。 优化(写出鲁棒性更好的SQL！) 所以在group by之前都执行以下where \*.\* is not null
    
    </summary>
    
      <category term="SQL" scheme="https://www.wolfdan.cn/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://www.wolfdan.cn/tags/SQL/"/>
    
  </entry>
  
</feed>
